---
version: 2
jobs:
  install:
    working_directory: ~/sind
    docker:
      - image: circleci/golang:1.12.1
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: make download
      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

  integration_test:
    machine:
      enabled: true
    working_directory: ~/sind
    steps:
      - checkout
      - run:
          name: Install and Setup Go
          command: |
            sudo rm -rf /usr/local/go
            curl -sSfL https://dl.google.com/go/go1.12.1.linux-amd64.tar.gz -o go.tgz
            echo "2a3fdabf665496a0db5f41ec6af7a9b15a49fbe71a85a50ca38b1f13a103aeec *go.tgz" | sha256sum -c -
            sudo tar --overwrite -C /usr/local -xzf go.tgz
            rm go.tgz
            sudo mkdir -p "/go/{pkg/mod,src,bin}" && sudo chmod -R 777 /go
            echo 'export GOPATH=/go' >> "${BASH_ENV}"
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: Run Integration Tests
          command: |
            source "${BASH_ENV}"
            make integration_test

  unit_test:
    docker:
      - image: circleci/golang:1.12.1
    working_directory: ~/sind
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run:
          name: "Install golangci-lint"
          command: |
            curl -sfL https://install.goreleaser.com/github.com/golangci/golangci-lint.sh | sh -s v1.15.0
            sudo mv ./bin/golangci-lint $GOPATH/bin
            rm -rf ./bin
            golangci-lint --version
      - run: make lint
      - run: make unit_test
      - run: make binary

  release:
    docker:
      - image: circleci/golang:1.12.1
    working_directory: ~/sind
    steps:
      - checkout
      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}
      - run: curl -sL https://git.io/goreleaser | bash

workflows:
  version: 2
  main:
    jobs:
      - install:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
      - unit_test:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
          requires:
            - install
      - integration_test:
          filters:
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
          requires:
            - install
      - release:
          requires:
            - unit_test
            - integration_test
          filters:
            branches:
              ignore: /.*/
            tags:
              only: /v[0-9]+(\.[0-9]+)*(-.*)*/
